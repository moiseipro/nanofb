# Generated by Django 4.0.4 on 2023-12-25 13:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import exercises.models


class Migration(migrations.Migration):

    dependencies = [
        ('video', '0014_video_favourites'),
        ('references', '0040_merge_20231219_1235'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('exercises', '0085_exercisefeature_adminexercise_features_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TrainerExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateField(auto_now_add=True)),
                ('date_editing', models.DateField(blank=True, null=True)),
                ('order', models.IntegerField(default=0, help_text='Индекс сортировки')),
                ('visible', models.BooleanField(default=True, help_text='Показывать упр-ие пользователю или нет')),
                ('visible_demo', models.BooleanField(default=True, help_text='Показывать упр-ие пользователю или нет в демо-режиме версии')),
                ('completed', models.BooleanField(default=False, help_text='Упражнение завершено')),
                ('completed_time', models.DateField(blank=True, help_text='Когда упр-ие было завершено', null=True)),
                ('title', models.JSONField(blank=True, null=True)),
                ('description', models.JSONField(blank=True, null=True)),
                ('description_trainer', models.JSONField(blank=True, null=True)),
                ('field_players', models.JSONField(blank=True, null=True)),
                ('field_goal', models.JSONField(blank=True, null=True)),
                ('field_goalkeeper', models.JSONField(blank=True, null=True)),
                ('field_age', models.JSONField(blank=True, null=True)),
                ('field_task', models.JSONField(blank=True, null=True)),
                ('scheme_data', models.JSONField(blank=True, null=True)),
                ('scheme_1', models.CharField(blank=True, max_length=30, null=True)),
                ('scheme_2', models.CharField(blank=True, max_length=30, null=True)),
                ('scheme_img', models.ImageField(blank=True, null=True, upload_to=exercises.models.upload_location_scheme)),
                ('video_data', models.JSONField(blank=True, null=True)),
                ('animation_data', models.JSONField(blank=True, null=True)),
                ('old_id', models.IntegerField(blank=True, null=True)),
                ('clone_nfb_id', models.IntegerField(blank=True, null=True)),
                ('video_links', models.JSONField(blank=True, null=True)),
                ('opt_has_video', models.BooleanField(default=False)),
                ('opt_has_animation', models.BooleanField(default=False)),
                ('opt_has_description', models.BooleanField(default=False)),
                ('opt_has_scheme', models.BooleanField(default=False)),
                ('field_age_a', models.IntegerField(blank=True, null=True)),
                ('field_age_b', models.IntegerField(blank=True, null=True)),
                ('field_players_a', models.IntegerField(blank=True, null=True)),
                ('field_players_b', models.IntegerField(blank=True, null=True)),
                ('field_keyword_a', models.CharField(blank=True, max_length=30, null=True)),
                ('field_keyword_b', models.CharField(blank=True, max_length=30, null=True)),
                ('field_keywords', models.JSONField(blank=True, null=True)),
                ('field_exs_category_a', models.CharField(blank=True, max_length=30, null=True)),
                ('field_exs_category_b', models.CharField(blank=True, max_length=30, null=True)),
                ('field_categories', models.JSONField(blank=True, null=True)),
                ('field_types', models.JSONField(blank=True, null=True)),
                ('field_physical_qualities', models.JSONField(blank=True, null=True)),
                ('field_cognitive_loads', models.JSONField(blank=True, null=True)),
                ('field_fields', models.JSONField(blank=True, null=True)),
                ('features', models.ManyToManyField(to='exercises.exercisefeature')),
                ('ref_age_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='references.exsagecategory')),
                ('ref_ball', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='references.exsball')),
                ('ref_cognitive_load', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='references.exscognitiveload')),
                ('ref_goal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='references.exsgoal')),
                ('ref_stress_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='references.exsstresstype')),
                ('ref_team_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='references.exsteamcategory')),
                ('ref_train_part', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='references.exstrainpart')),
                ('tags', models.ManyToManyField(to='exercises.exercisetag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('videos', models.ManyToManyField(through='exercises.ExerciseVideo', to='video.video')),
            ],
            options={
                'ordering': ['order'],
                'permissions': [('view_category_u_big', 'View exercises with category <U>'), ('view_category_u_small', 'View exercises with category <u>'), ('view_category_u_PRO', 'View exercises with category <PRO>')],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='exercisevideo',
            name='exercise_trainer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='exercises.trainerexercise'),
        ),
        migrations.AddField(
            model_name='userexerciseparam',
            name='exercise_trainer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='exercises.trainerexercise'),
        ),
    ]
