# Generated by Django 4.0.4 on 2022-10-04 11:24

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('video', '0012_alter_video_taggit'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('references', '0013_playerprotocolstatus'),
        ('events', '0008_alter_clubevent_options_alter_userevent_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserMatch',
            fields=[
                ('duration', models.DurationField(default=datetime.timedelta(0), help_text='The duration of the match in the format 00:00:00', verbose_name='duration match')),
                ('goals', models.SmallIntegerField(default=0, help_text='Number of goals scored by the team.', verbose_name='goals')),
                ('penalty', models.SmallIntegerField(default=0, help_text='Number of team penalties per match.', verbose_name='penalty')),
                ('opponent', models.CharField(default='', max_length=255)),
                ('o_goals', models.SmallIntegerField(default=0, help_text='Number of goals scored by the opponent team.', verbose_name='opponent goals')),
                ('o_penalty', models.SmallIntegerField(default=0, help_text='Number of opponent team penalties per match.', verbose_name='opponent penalty')),
                ('estimation', models.SmallIntegerField(default=0, help_text='Rating of the match on the scale.', verbose_name='estimation')),
                ('place', models.CharField(blank=True, help_text='Venue of the match.', max_length=80, null=True, verbose_name='place')),
                ('tournament', models.CharField(blank=True, help_text='Tournament name.', max_length=80, null=True, verbose_name='tournament')),
                ('m_type', models.IntegerField(default=0, help_text='Match type, 0 - not official, 1 - official.', validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('m_format', models.CharField(blank=True, help_text='Match format.', max_length=80, null=True)),
                ('scheme_data', models.JSONField(blank=True, null=True)),
                ('event_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='events.userevent')),
                ('sync_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sync_event', to='events.userevent')),
                ('team_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='references.userteam')),
                ('trainer_user_id', models.ForeignKey(blank=True, help_text='Coach tied to the match', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='trainer')),
                ('video_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='video.video')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClubMatch',
            fields=[
                ('duration', models.DurationField(default=datetime.timedelta(0), help_text='The duration of the match in the format 00:00:00', verbose_name='duration match')),
                ('goals', models.SmallIntegerField(default=0, help_text='Number of goals scored by the team.', verbose_name='goals')),
                ('penalty', models.SmallIntegerField(default=0, help_text='Number of team penalties per match.', verbose_name='penalty')),
                ('opponent', models.CharField(default='', max_length=255)),
                ('o_goals', models.SmallIntegerField(default=0, help_text='Number of goals scored by the opponent team.', verbose_name='opponent goals')),
                ('o_penalty', models.SmallIntegerField(default=0, help_text='Number of opponent team penalties per match.', verbose_name='opponent penalty')),
                ('estimation', models.SmallIntegerField(default=0, help_text='Rating of the match on the scale.', verbose_name='estimation')),
                ('place', models.CharField(blank=True, help_text='Venue of the match.', max_length=80, null=True, verbose_name='place')),
                ('tournament', models.CharField(blank=True, help_text='Tournament name.', max_length=80, null=True, verbose_name='tournament')),
                ('m_type', models.IntegerField(default=0, help_text='Match type, 0 - not official, 1 - official.', validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('m_format', models.CharField(blank=True, help_text='Match format.', max_length=80, null=True)),
                ('scheme_data', models.JSONField(blank=True, null=True)),
                ('event_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='events.clubevent')),
                ('sync_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sync_event', to='events.clubevent')),
                ('team_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='references.clubteam')),
                ('trainer_user_id', models.ForeignKey(blank=True, help_text='Coach tied to the match', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='trainer')),
                ('video_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='video.video')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
